import java.nio.charset.StandardCharsets

println('[ENVIRONMENT VARIABLES]')
System.getenv().sort().each { name, value -> println "  ${name}=${value}" }

// Refer to below link for how to config multiple projects (modules)
// https://docs.gradle.org/current/userguide/multi_project_builds.html

buildscript {
	ext {
		springBootVersion = '2.4.2'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"
	}
}


allprojects {
	task hello {
		doLast { task ->
			println "Hello from $task.project.name"
		}
	}

	apply plugin: 'idea'

	idea {
		module {
			downloadJavadoc = true
			downloadSources = true
			outputDir file('build/classes/main')
			testOutputDir file('build/classes/test')
		}
	}
}

subprojects {
	hello {
		doLast {
			println "- I am a sub-project"
		}
	}

	apply plugin: 'java'
	apply plugin: 'groovy'
	apply plugin: 'io.spring.dependency-management'

	group = 'com.thanhhai'
	version = '0.0.1-SNAPSHOT'
	sourceCompatibility = '11'	// Java version

	configurations {
		developmentOnly
		runtimeClasspath {
			extendsFrom developmentOnly
		}
		compileOnly {
			extendsFrom annotationProcessor
		}
	}

	repositories {
		mavenCentral()
	}

	dependencyManagement {
		imports {
			mavenBom "org.springframework.boot:spring-boot-dependencies:$springBootVersion"
		}
	}

	dependencies {
		annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
		// Lombok
		annotationProcessor 'org.projectlombok:lombok'
		compileOnly 'org.projectlombok:lombok'
		testCompileOnly 'org.projectlombok:lombok'
		testAnnotationProcessor 'org.projectlombok:lombok'
		// Test
		testImplementation 'org.springframework.boot:spring-boot-starter-test'
		// Spock
		testImplementation 'org.codehaus.groovy:groovy-all:2.5.8'
		testImplementation 'org.spockframework:spock-core:1.3-groovy-2.5'
		testImplementation 'cglib:cglib-nodep:3.3.0'
	}

	tasks.withType(JavaCompile) {
		options.encoding = StandardCharsets.UTF_8.name();
	}
}

// Just for funny -> Run command [gradle -q hello] for testing
project(':moduleCore').hello {
	doLast {
		println "- I love all other modules."
	}
}

configure(subprojects.findAll {it.name != 'moduleCore'}) {
	hello {
		doLast {
			println '- I am not Core module.'
		}
	}
}